type Contract = record {
  id : nat64;
  department_id : nat64;
  terms : text;
  end_date : nat64;
  start_date : nat64;
  is_active : bool;
  vendor_id : nat64;
};
type CreateContractPayload = record {
  department_id : nat64;
  terms : text;
  end_date : nat64;
  start_date : nat64;
  vendor_id : nat64;
};
type CreateFeedbackPayload = record {
  user_id : nat64;
  comment : text;
  rating : float32;
  vendor_id : nat64;
};
type CreateServicePayload = record {
  name : text;
  description : text;
  price : nat64;
  vendor_id : nat64;
};
type CreateVendorPayload = record {
  contact : text;
  name : text;
  email : text;
  address : text;
  services : vec text;
};
type Feedback = record {
  id : nat64;
  user_id : nat64;
  comment : text;
  timestamp : nat64;
  rating : float32;
  vendor_id : nat64;
};
type Message = variant {
  Error : text;
  InvalidPayload : text;
  NotFound : text;
  Success : text;
};
type Result = variant { Ok : float32; Err : Message };
type Result_1 = variant { Ok : bool; Err : Message };
type Result_2 = variant { Ok : Contract; Err : Message };
type Result_3 = variant { Ok : Feedback; Err : Message };
type Result_4 = variant { Ok : Service; Err : Message };
type Result_5 = variant { Ok : Vendor; Err : Message };
type Result_6 = variant { Ok : vec Contract; Err : Message };
type Result_7 = variant { Ok : vec Feedback; Err : Message };
type Result_8 = variant { Ok : vec Service; Err : Message };
type Result_9 = variant { Ok : vec Vendor; Err : Message };
type Service = record {
  id : nat64;
  name : text;
  description : text;
  is_available : bool;
  price : nat64;
  vendor_id : nat64;
};
type Vendor = record {
  id : nat64;
  contact : text;
  name : text;
  ratings : vec float32;
  created_at : nat64;
  email : text;
  address : text;
  services : vec text;
};
service : {
  calculate_average_rating : (nat64) -> (Result) query;
  check_service_availability : (nat64) -> (Result_1) query;
  create_contract : (CreateContractPayload) -> (Result_2);
  create_feedback : (CreateFeedbackPayload) -> (Result_3);
  create_service : (CreateServicePayload) -> (Result_4);
  create_vendor : (CreateVendorPayload) -> (Result_5);
  deactivate_contract : (nat64) -> (Result_2);
  get_contracts_by_vendor_id : (nat64) -> (Result_6) query;
  get_feedback_by_vendor_id : (nat64) -> (Result_7) query;
  get_services_by_vendor_id : (nat64) -> (Result_8) query;
  get_vendor_by_id : (nat64) -> (Result_5) query;
  list_all_vendors : () -> (Result_9) query;
  update_vendor_details : (nat64, opt text, opt text, opt text) -> (Result_5);
}
